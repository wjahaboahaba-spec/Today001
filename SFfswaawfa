

local Library = loadstring(
    game:HttpGet(
        'https://raw.githubusercontent.com/x2zu/OPEN-SOURCE-UI-ROBLOX/refs/heads/main/X2ZU%20UI%20ROBLOX%20OPEN%20SOURCE/DummyUi-leak-by-x2zu/fetching-main/Tools/Framework.luau'
    )
)()

-- ü™ü Create Main Window
local Window = Library:Window({
    Title = 'Banna Town',
    Desc = 'Nexon Hub on top',
    Icon = 105059922903197,
    Theme = 'Dark',
    Config = {
        Keybind = Enum.KeyCode.LeftControl,
        Size = UDim2.new(0, 500, 0, 400),
    },
    CloseUIButton = {
        Enabled = true,
        Text = 'Nexon Hub',
    },
})

-- üìÅ Common Services
local Players = game:GetService('Players')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local VirtualUser = game:GetService('VirtualUser')
local VirtualInputManager = game:GetService('VirtualInputManager')
local LocalPlayer = Players.LocalPlayer

-----------------------------------------------------
-- üè† ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
-----------------------------------------------------
local Tab = Window:Tab({ Title = '‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å', Icon = 'star' })
do
    Tab:Section({ Title = '‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡πà‡∏≤‡∏á ‡πÜ' })

    -- ‚úÖ Anti-AFK Toggle
    local AntiAfkConnection
    Tab:Toggle({
        Title = '‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏•‡∏∏‡∏î (Anti-AFK)',
        Desc = '‡∏´‡∏¢‡∏∏‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏∏‡∏î‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏Å‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥',
        Value = false,
        Callback = function(enabled)
            if enabled then
                AntiAfkConnection = LocalPlayer.Idled:Connect(function()
                    VirtualUser:Button2Down(
                        Vector2.new(0, 0),
                        workspace.CurrentCamera.CFrame
                    )
                    task.wait(1)
                    VirtualUser:Button2Up(
                        Vector2.new(0, 0),
                        workspace.CurrentCamera.CFrame
                    )
                    print(
                        'üõ°Ô∏è ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô AFK: ‡∏™‡πà‡∏á input ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß'
                    )
                end)
            else
                if AntiAfkConnection then
                    AntiAfkConnection:Disconnect()
                    AntiAfkConnection = nil
                    print('üõë Anti-AFK ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß')
                end
            end
        end,
    })

  
local args = {
	"Claim_Coins"
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("OnlineShopEvent"):FireServer(unpack(args))




    -- ‚úÖ Respawn without cooldown
    Tab:Button({
        Title = '‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà Nocooldown',
        Desc = '‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ü‡∏≤‡∏°‡∏à‡∏∞‡∏û‡∏±‡∏á ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡πÄ‡∏Å‡∏°',
        Callback = function()
            ReplicatedStorage:WaitForChild('Events')
                :WaitForChild('OnDeathEvent')
                :FireServer('LoadCharacter')
        end,
    })


local AFKCoinEnabled = false  -- ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö

-- üïí ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏£‡∏µ‡πÇ‡∏°‡∏ó Claim_Coins ‡∏ó‡∏∏‡∏Å 6 ‡∏ô‡∏≤‡∏ó‡∏µ
task.spawn(function()
	while true do
		task.wait(360) -- 6 ‡∏ô‡∏≤‡∏ó‡∏µ = 360 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
		if AFKCoinEnabled then
			pcall(function()
				local args = {"Claim_Coins"}
				local event = game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("OnlineShopEvent")
				event:FireServer(unpack(args))
				print("üí∞ AFK Coin: ‡πÄ‡∏Ñ‡∏•‡∏°‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß ("..os.date("%H:%M:%S")..")")
			end)
		end
	end
end)

Tab:Toggle({
	Title = "AFK Coin",
	Desc = "(‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏¥‡πâ‡∏á‡πÑ‡∏ß‡πâ‡πÑ‡∏î‡πâ)",
	Value = false,
	Callback = function(state)
		AFKCoinEnabled = state
		if state then
			print("‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö AFK Coin ‡πÅ‡∏•‡πâ‡∏ß")
		else
			print("üõë ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö AFK Coin ‡πÅ‡∏•‡πâ‡∏ß")
		end
	end
})

--[[ 
  Halloween Gems ‚Äî Auto Collect (with Live Rescan + Toggle)
  - ‡∏™‡πÅ‡∏Å‡∏ô workspace["Halloween Gems"] ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏ö‡∏ö recursive
  - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πâ‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢ ‡πÜ (rescan loop)
  - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á ProximityPrompt ‡πÅ‡∏•‡∏∞ Touch
  - ‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö Toggle: ‡πÄ‡∏õ‡∏¥‡∏î = ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô, ‡∏õ‡∏¥‡∏î = ‡∏´‡∏¢‡∏∏‡∏î
]]

-- ========= CONFIG =========
local CONTAINER_NAME = "Halloween Gems"
local TELEPORT_OFFSET = Vector3.new(0, 4, 0)    -- ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡πÄ‡∏õ‡πâ‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
local TP_SETTLE      = 0.15                     -- ‡∏£‡∏≠‡∏´‡∏•‡∏±‡∏á‡∏ß‡∏≤‡∏£‡πå‡∏õ
local COLLECT_WAIT   = 0.25                     -- ‡πÄ‡∏ß‡πâ‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏∞‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏Å‡πá‡∏ö
local RESCAN_DELAY   = 1.0                      -- ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏≠‡∏ö‡∏™‡πÅ‡∏Å‡∏ô

getgenv().HALLOWEEN_GEMS_RUNNING = false

-- ========= Services =========
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- ========= Helpers =========
local function getHRP()
    local c = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    return c:FindFirstChild("HumanoidRootPart")
end

local function anyBasePart(obj)
    if obj:IsA("BasePart") then return obj end
    for _, d in ipairs(obj:GetDescendants()) do
        if d:IsA("BasePart") then return d end
    end
    return nil
end

-- ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà ‚Äú‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Å‡πá‡∏ö‚Äù ‡πÑ‡∏ß‡πâ‡∏¢‡∏¥‡∏á‡∏ï‡πà‡∏≠ ‡πÑ‡∏°‡πà‡∏¢‡∏¥‡∏á‡∏ã‡πâ‡∏≥‡∏ä‡∏¥‡πâ‡∏ô‡πÄ‡∏î‡∏¥‡∏°
local collectedMark = setmetatable({}, {__mode = "k"}) -- weak keys

local function findTargets(rootFolder)
    local targets, seen = {}, {}
    for _, d in ipairs(rootFolder:GetDescendants()) do
        -- 1) ProximityPrompt
        if d:IsA("ProximityPrompt") then
            local part = anyBasePart(d.Parent)
            if part and not seen[part] and not collectedMark[part] then
                table.insert(targets, {part = part, prompt = d})
                seen[part] = true
            end
        -- 2) Touchable part
        elseif d:IsA("BasePart") and (d:FindFirstChildOfClass("TouchTransmitter") or d:FindFirstChild("TouchInterest")) then
            if not seen[d] and not collectedMark[d] then
                table.insert(targets, {part = d})
                seen[d] = true
            end
        -- 3) ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏ö‡∏≤‡∏á‡πÄ‡∏Å‡∏°‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏≤‡∏£‡πå‡∏ï‡∏ß‡πà‡∏≤ ‚ÄúGem‚Äù
        elseif d:IsA("BasePart") and d.Name:lower():find("gem") then
            if not seen[d] and not collectedMark[d] then
                table.insert(targets, {part = d})
                seen[d] = true
            end
        end
    end
    return targets
end

local function safeTeleport(cf)
    local hrp = getHRP()
    if not hrp then return false, "No HRP" end
    hrp.CFrame = cf
    task.wait(TP_SETTLE)
    return true
end

local function collectOne(t)
    local hrp = getHRP()
    if not hrp then return false, "No HRP" end
    local part = t.part
    if not part or not part:IsDescendantOf(workspace) then
        return false, "Part missing"
    end

    local ok = safeTeleport(CFrame.new(part.Position + TELEPORT_OFFSET))
    if not ok then return false, "Teleport failed" end

    -- ProximityPrompt
    if t.prompt and typeof(fireproximityprompt) == "function" then
        pcall(fireproximityprompt, t.prompt, 1)
    end

    -- Touch fallback/‡πÄ‡∏™‡∏£‡∏¥‡∏°
    if typeof(firetouchinterest) == "function" then
        pcall(firetouchinterest, hrp, part, 0)
        task.wait(0.08)
        pcall(firetouchinterest, hrp, part, 1)
    end

    task.wait(COLLECT_WAIT)
    collectedMark[part] = true -- ‡∏Å‡∏±‡∏ô‡∏¢‡∏¥‡∏á‡∏ã‡πâ‡∏≥
    return true
end

-- ========= Main Loop (rescan ‡∏ï‡∏•‡∏≠‡∏î) =========
local _collectorThread

local function CollectorLoop()
    while getgenv().HALLOWEEN_GEMS_RUNNING do
        local container = workspace:FindFirstChild(CONTAINER_NAME)
        if not container then
            warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå:", CONTAINER_NAME)
            break
        end

        local targets = findTargets(container)
        if #targets > 0 then
            print(("üéØ ‡∏û‡∏ö‡πÄ‡∏õ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà %d ‡∏ä‡∏¥‡πâ‡∏ô ‚Äî ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡πá‡∏ö"):format(#targets))
        end

        for i, t in ipairs(targets) do
            if not getgenv().HALLOWEEN_GEMS_RUNNING then break end
            local ok, err = collectOne(t)
            if ok then
                print(("[%d/%d] ‚úÖ %s"):format(i, #targets, t.part:GetFullName()))
            else
                warn(("‚ùå ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: %s"):format(err or "unknown"))
            end
        end

        -- ‡∏´‡∏ô‡πà‡∏ß‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πÅ‡∏Å‡∏ô‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏à‡∏≠‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà spawn ‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà)
        task.wait(RESCAN_DELAY)
    end
    print("‚èπÔ∏è Collector stopped.")
end

function StartCollectHalloweenGems()
    if getgenv().HALLOWEEN_GEMS_RUNNING then return end
    getgenv().HALLOWEEN_GEMS_RUNNING = true
    print("‚ñ∂Ô∏è Collector started (live rescan enabled).")
    _collectorThread = task.spawn(CollectorLoop)
end

function StopCollectHalloweenGems()
    getgenv().HALLOWEEN_GEMS_RUNNING = false
end

-- ========= UI Toggle Hook (‡πÉ‡∏™‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö lib ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì) =========
-- ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà `UI` ‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå/‡πÄ‡∏ã‡∏Ñ‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á Toggle ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
-- ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏°‡∏≤: Title/Desc/Value/Callback
local UI = UI or {}  -- ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ lib ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏ó‡∏¥‡πâ‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡πÑ‡∏õ
function UI:Toggle(def)  -- mock ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ô‡πÄ‡∏ó‡∏™; ‡πÉ‡∏ô‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ä‡πâ Toggle ‡∏Ç‡∏≠‡∏á lib ‡∏Ñ‡∏∏‡∏ì
    print(("üß™ [MockToggle] %s (default=%s)"):format(def.Title or "Toggle", tostring(def.Value)))
    def.Callback(def.Value) -- auto fire ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏ï‡∏≤‡∏°‡∏Ñ‡πà‡∏≤ Value
    return { Set = function(_,v) def.Callback(v) end }
end

Tab:Toggle({
    Title = "Auto Coins [Event]",
    Desc  = "",
    Value = false,  -- ‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    Callback = function(v)
        print("Toggle:", v)
        if v then
            StartCollectHalloweenGems()
        else
            StopCollectHalloweenGems()
        end
    end
})

    -- ‚úÖ Spam Twitter
    local spamMessage = 'Hello!'
    local spamEnabled = false
    local spamTask

    Tab:Textbox({
        Title = '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Twitter',
        Desc = '‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á',
        Placeholder = '‡πÄ‡∏ä‡πà‡∏ô: ‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ï‡∏•‡∏≤‡∏î‡πÇ‡∏•‡∏Å',
        Value = 'Hello!',
        ClearTextOnFocus = false,
        Callback = function(text)
            spamMessage = text
        end,
    })




    Tab:Toggle({
        Title = '‡∏™‡πÅ‡∏õ‡∏° Twitter',
        Desc = '‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Twitter ‡∏ã‡πâ‡∏≥ ‡πÜ',
        Value = false,
        Callback = function(state)
            spamEnabled = state
            if state then
                spamTask = task.spawn(function()
                    while spamEnabled do
                        ReplicatedStorage:WaitForChild('Events')
                            :WaitForChild('PhoneEvent')
                            :FireServer('SendTwitter', spamMessage)
                        task.wait(0.2)
                    end
                end)
            else
                spamEnabled = false
            end
        end,
    })

-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå
local cooldownConnection = nil

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô bypass cooldown
local function enableBypassCooldown()
    cooldownConnection = game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
        prompt.HoldDuration = 0
    end)
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô bypass cooldown
local function disableBypassCooldown()
    if cooldownConnection then
        cooldownConnection:Disconnect()
        cooldownConnection = nil
    end
end


Tab:Toggle({
    Title = "Bypass Nocooldown ‡∏à‡∏Å‡∏õ‡∏π‡∏ô‡πÑ‡∏ß+‡∏™‡∏≤‡∏¢‡πÑ‡∏ü",
    Desc = "",
    Value = false,
    Callback = function(state)
        if state then
            enableBypassCooldown()
            print("Bypass Enabled")
        else
            disableBypassCooldown()
            print("Bypass Disabled")
        end
    end
})



    -- ‚úÖ Toggle GUI
    Tab:Toggle({
        Title = '‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠‡∏£‡∏ñ',
        Desc = '',
        Value = false,
        Callback = function(state)
            local gui = LocalPlayer:WaitForChild('PlayerGui')
                :FindFirstChild('CarShopMenu')
            if gui then
                gui.Enabled = state
            end
        end,
    })

    Tab:Toggle({
        Title = '‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤',
        Desc = '',
        Value = false,
        Callback = function(state)
            local gui = LocalPlayer:WaitForChild('PlayerGui')
                :FindFirstChild('Menu')
                :FindFirstChild('SHOPFrame')
            if gui then
                gui.Visible = state
            end
        end,
    })

    Tab:Toggle({
        Title = '‡∏ä‡πá‡∏≠‡∏õ ‡∏õ‡∏∑‡∏ô',
        Desc = '',
        Value = false,
        Callback = function(state)
            local gui = LocalPlayer:WaitForChild('PlayerGui')
                :FindFirstChild('Menu')
                :FindFirstChild('WeaponsShopFrame')
            if gui then
                gui.Visible = state
            end
        end,
    })

    Tab:Toggle({
        Title = '‡∏ï‡∏•‡∏≤‡∏î‡πÇ‡∏•‡∏Å',
        Desc = '',
        Value = false,
        Callback = function(state)
            local gui = LocalPlayer:WaitForChild('PlayerGui')
                :FindFirstChild('Menu')
                :FindFirstChild('SellSHOPFrame')
            if gui then
                gui.Visible = state
            end
        end,
    })

    -- ‚úÖ ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡∏õ‡∏∑‡∏ô
    Tab:Button({
        Title = '‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡∏õ‡∏∑‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó)',
        Desc = '',
        Callback = function()
            local folder = LocalPlayer:FindFirstChild('WeaponFolder')
            if folder then
                for _, item in ipairs(folder:GetChildren()) do
                    if item:IsA('BoolValue') then
                        item.Value = true
                    end
                end
                Window:Notify({
                    Title = '‚úÖ Success',
                    Desc = '‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏≤‡∏ß‡∏∏‡∏ò‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!',
                    Time = 3,
                })
            else
                Window:Notify({
                    Title = '‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö WeaponFolder',
                    Desc = '‡∏≠‡∏≤‡∏à‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÇ‡∏´‡∏•‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô Player',
                    Time = 3,
                })
            end
        end,
    })

    -- ‚úÖ ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡∏£‡∏ñ
    Tab:Button({
        Title = '‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡∏£‡∏ñ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï)',
        Desc = '',
        Callback = function()
            local folder = LocalPlayer:FindFirstChild('WeaponFolder')
            if folder then
                for _, item in ipairs(folder:GetChildren()) do
                    if item:IsA('BoolValue') then
                        item.Value = true
                    end
                end
                Window:Notify({
                    Title = '‚úÖ Success',
                    Desc = '‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!',
                    Time = 3,
                })
            else
                Window:Notify({
                    Title = '‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö WeaponFolder',
                    Desc = '‡∏≠‡∏≤‡∏à‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÇ‡∏´‡∏•‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô Player',
                    Time = 3,
                })
            end
        end,
    })
end

Window:Line()

-----------------------------------------------------
local Black = Window:Tab({Title = "‡∏á‡∏≤‡∏ô‡∏î‡∏≥", Icon = "tag"}) do
    Black:Section({Title = "‡∏™‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏î‡∏≥ ‡∏ü‡∏≤‡∏£‡∏°‡πå"})

local currentIndex = 0 -- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á MeshWire ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
local function TeleportNextWire()
    local player = game.Players.LocalPlayer
    if not player or not player.Character then return end

    local hrp = player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local wiresFolder = workspace:FindFirstChild("Grey_Jobs") 
        and workspace.Grey_Jobs:FindFirstChild("Wires")

    if not wiresFolder then
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö workspace.Grey_Jobs.Wires")
        return
    end

    local children = wiresFolder:GetChildren()
    if #children == 0 then
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ MeshWire ‡πÉ‡∏ô Wires")
        return
    end

    -- ‚úÖ ‡πÑ‡∏õ index ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    currentIndex = currentIndex + 1
    if currentIndex > #children then
        currentIndex = 1
    end

    local target = children[currentIndex]
    if target and target:IsA("BasePart") then
        hrp.CFrame = target.CFrame + Vector3.new(0, 5, 0) -- ‡∏¢‡∏∑‡∏ô‡πÄ‡∏´‡∏ô‡∏∑‡∏≠ +5 studs
        print("‚ö° ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ MeshWire ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç:", currentIndex, target.Name)
    else
        warn("‚ùå target ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà BasePart")
    end
end


-- ‚úÖ ‡∏õ‡∏∏‡πà‡∏° UI (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô White ‡πÄ‡∏õ‡πá‡∏ô Tab ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)
Black:Button({
    Title = "‡∏Ç‡πÇ‡∏°‡∏¢‡∏™‡∏≤‡∏¢‡πÑ‡∏ü",
    Desc = "",
    Callback = function()
         TeleportNextWire()
    end
})



    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    local greyJobs = workspace:WaitForChild("Grey_Jobs", 10)
    local cementsFolder = greyJobs and greyJobs:WaitForChild("CementsFolder", 10)

    if not cementsFolder then
        Black:Label("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö CementsFolder")
        return
    end

    local cementModels = {}
    for _, model in ipairs(cementsFolder:GetChildren()) do
        if model:IsA("Model") and model.Name == "Cement" then
            -- ‚úÖ ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç: ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ BasePart ‡πÄ‡∏õ‡πá‡∏ô‡∏ñ‡∏∏‡∏á‡∏ã‡∏µ‡πÄ‡∏°‡∏ô‡∏ï‡πå ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏Ñ‡πà‡∏ê‡∏≤‡∏ô‡πÑ‡∏°‡πâ
            local hasCementBag = false
            for _, part in ipairs(model:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "Pallet" then -- ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏£‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ñ‡∏∏‡∏á
                    hasCementBag = true
                    break
                end
            end

            if hasCementBag then
                table.insert(cementModels, model)
            end
        end
    end

    if #cementModels == 0 then
        Black:Label("üì≠ ‡πÑ‡∏°‡πà‡∏°‡∏µ Cement ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏ñ‡∏∏‡∏á‡∏≠‡∏¢‡∏π‡πà")
        return
    end

    for i, model in ipairs(cementModels) do
        local cf, _ = model:GetBoundingBox()

        Black:Button({
            Title = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏à‡∏Å‡∏õ‡∏π‡∏ô " .. i,
            Desc = "‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ô‡∏µ‡πâ",
            Callback = function()
                local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                local hrp = char:WaitForChild("HumanoidRootPart")
                hrp.CFrame = cf + Vector3.new(0, 3, 0)

                Window:Notify({
                    Title = "‚úÖ ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                    Desc = "‡πÑ‡∏õ‡∏¢‡∏±‡∏á Cement #" .. i,
                    Time = 2
                })
            end
        })
    end
end



local CaptureTab = Window:Tab({Title = "‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢", Icon = "target"})
    CaptureTab:Section({Title = "üéØ ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î WANTED"})

  


local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CaptureGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á UI Elements
local function CreateFrame(name, parent, size, position, bgColor)
    local frame = Instance.new("Frame")
    frame.Name = name
    frame.Size = size
    frame.Position = position
    frame.BackgroundColor3 = bgColor or Color3.fromRGB(30, 30, 35)
    frame.BorderSizePixel = 0
    frame.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame
    
    return frame
end

local function CreateButton(name, parent, text, size, position, callback)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 14
    button.Font = Enum.Font.GothamBold
    button.BorderSizePixel = 0
    button.AutoButtonColor = false
    button.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button
    
    button.MouseButton1Click:Connect(callback)
    
    -- Hover Effect
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(70, 70, 85)
    end)
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
    end)
    
    return button
end

local function CreateLabel(name, parent, text, size, position, textSize)
    local label = Instance.new("TextLabel")
    label.Name = name
    label.Size = size
    label.Position = position
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = textSize or 14
    label.Font = Enum.Font.GothamBold
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = parent
    return label
end

-- Main Frame (‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏∞‡∏ó‡∏±‡∏î‡∏£‡∏±‡∏î)
local MainFrame = CreateFrame("MainFrame", ScreenGui, UDim2.new(0, 300, 0, 400), UDim2.new(0.5, -150, 0.5, -200), Color3.fromRGB(25, 25, 30))

-- Title Bar
local TitleBar = CreateFrame("TitleBar", MainFrame, UDim2.new(1, 0, 0, 40), UDim2.new(0, 0, 0, 0), Color3.fromRGB(220, 50, 50))
local TitleLabel = CreateLabel("Title", TitleBar, "üö® ‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢", UDim2.new(1, -50, 1, 0), UDim2.new(0, 15, 0, 0), 16)
TitleLabel.TextXAlignment = Enum.TextXAlignment.Center



-- Draggable
local dragging, dragInput, dragStart, startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and dragging then
        updateDrag(input)
    end
end)

-- Content Area
local ContentFrame = CreateFrame("Content", MainFrame, UDim2.new(1, -16, 1, -52), UDim2.new(0, 8, 0, 48), Color3.fromRGB(35, 35, 40))

-- Variables
local selectedPlayer = nil
local captureToggle = false
local captureConnection = nil
local dropdownOpen = false

local yPos = 10

-- Section 1: Dropdown
CreateLabel("Label1", ContentFrame, "üéØ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢", UDim2.new(1, -16, 0, 22), UDim2.new(0, 8, 0, yPos), 13)
yPos = yPos + 26

-- Dropdown Button
local DropdownButton = CreateButton("DropdownBtn", ContentFrame, "‚ñº ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô", UDim2.new(1, -16, 0, 38), UDim2.new(0, 8, 0, yPos), function() end)
DropdownButton.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
DropdownButton.TextSize = 14
yPos = yPos + 42

-- Dropdown List Container
local DropdownList = CreateFrame("DropdownList", ContentFrame, UDim2.new(1, -16, 0, 0), UDim2.new(0, 8, 0, yPos), Color3.fromRGB(40, 40, 50))
DropdownList.Visible = false
DropdownList.ClipsDescendants = true
DropdownList.ZIndex = 10

local DropdownScroll = Instance.new("ScrollingFrame")
DropdownScroll.Size = UDim2.new(1, 0, 1, 0)
DropdownScroll.BackgroundTransparency = 1
DropdownScroll.BorderSizePixel = 0
DropdownScroll.ScrollBarThickness = 6
DropdownScroll.Parent = DropdownList

local ListLayout = Instance.new("UIListLayout")
ListLayout.Padding = UDim.new(0, 2)
ListLayout.Parent = DropdownScroll

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô WANTED
local function GetWantedPlayers()
    local wantedPlayers = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local character = player.Character
            if character then
                local head = character:FindFirstChild("Head")
                if head then
                    local nameTag = head:FindFirstChild("NameTag")
                    if nameTag then
                        local wanted = nameTag:FindFirstChild("WANTED")
                        if wanted and wanted:IsA("GuiObject") and wanted.Visible == true then
                            table.insert(wantedPlayers, player.Name)
                        end
                    end
                end
            end
        end
    end
    return wantedPlayers
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Refresh Dropdown
local function RefreshDropdown()
    for _, child in ipairs(DropdownScroll:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    
    local wantedList = GetWantedPlayers()
    
    for i, playerName in ipairs(wantedList) do
        local itemBtn = CreateButton("Item"..i, DropdownScroll, playerName, UDim2.new(1, -8, 0, 32), UDim2.new(0, 0, 0, 0), function()
            selectedPlayer = playerName
            DropdownButton.Text = "‚úÖ " .. playerName
            dropdownOpen = false
            DropdownList.Visible = false
        end)
        itemBtn.BackgroundColor3 = Color3.fromRGB(55, 55, 65)
        itemBtn.TextSize = 13
    end
    
    DropdownScroll.CanvasSize = UDim2.new(0, 0, 0, #wantedList * 34)
    DropdownList.Size = UDim2.new(1, -16, 0, math.min(#wantedList * 34 + 4, 140))
end

-- Toggle Dropdown
DropdownButton.MouseButton1Click:Connect(function()
    dropdownOpen = not dropdownOpen
    DropdownList.Visible = dropdownOpen
    if dropdownOpen then
        RefreshDropdown()
    end
end)

-- ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
local RefreshBtn = CreateButton("RefreshBtn", ContentFrame, "üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠", UDim2.new(1, -16, 0, 36), UDim2.new(0, 8, 0, yPos), function()
    RefreshDropdown()
    local notif = Instance.new("TextLabel")
    notif.Size = UDim2.new(0, 180, 0, 50)
    notif.Position = UDim2.new(0.5, -90, 0, -60)
    notif.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
    notif.Text = "‚úÖ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡πÅ‡∏•‡πâ‡∏ß!"
    notif.TextColor3 = Color3.white
    notif.Font = Enum.Font.GothamBold
    notif.TextSize = 14
    notif.Parent = MainFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = notif
    
    task.wait(2)
    notif:Destroy()
end)
yPos = yPos + 42

-- Section 2: Toggle ‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢
CreateLabel("Label2", ContentFrame, "üö® ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢", UDim2.new(1, -16, 0, 22), UDim2.new(0, 8, 0, yPos), 13)
yPos = yPos + 26

local CaptureToggleBtn = CreateButton("CaptureToggle", ContentFrame, "‚≠ï ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢", UDim2.new(1, -16, 0, 42), UDim2.new(0, 8, 0, yPos), function() end)
CaptureToggleBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 90)
CaptureToggleBtn.TextSize = 14
yPos = yPos + 48

CaptureToggleBtn.MouseButton1Click:Connect(function()
    captureToggle = not captureToggle
    
    if captureToggle then
        CaptureToggleBtn.Text = "üî¥ ‡∏´‡∏¢‡∏∏‡∏î‡∏à‡∏±‡∏ö"
        CaptureToggleBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
        
        if not selectedPlayer then
            warn("‚ö†Ô∏è ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
            captureToggle = false
            CaptureToggleBtn.Text = "‚≠ï ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢"
            CaptureToggleBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 90)
            return
        end
        
        local targetPlayer = Players:FindFirstChild(selectedPlayer)
        if not targetPlayer or not targetPlayer.Character then
            warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
            captureToggle = false
            CaptureToggleBtn.Text = "‚≠ï ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢"
            CaptureToggleBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 90)
            return
        end
        
        local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local cuffs = LocalPlayer:FindFirstChild("Backpack") and LocalPlayer.Backpack:FindFirstChild("Handcuffs")
        
        if not (hrp and cuffs and cuffs:FindFirstChild("RemoteFunction")) then
            warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Handcuffs")
            captureToggle = false
            CaptureToggleBtn.Text = "‚≠ï ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢"
            CaptureToggleBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 90)
            return
        end
        
        local carrying = cuffs:WaitForChild("Carrying")
        
        captureConnection = RunService.RenderStepped:Connect(function()
            if not captureToggle then return end
            
            local target = Players:FindFirstChild(selectedPlayer)
            if not target or not target.Character then
                captureToggle = false
                CaptureToggleBtn.Text = "‚≠ï ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢"
                CaptureToggleBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 90)
                if captureConnection then
                    captureConnection:Disconnect()
                end
                return
            end
            
            local targetHrp = target.Character:FindFirstChild("HumanoidRootPart")
            local myHrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            
            if targetHrp and myHrp then
                local targetCFrame = targetHrp.CFrame
                local offset = targetCFrame.LookVector * -2 + Vector3.new(0, 0, 0)
                
                myHrp.CFrame = CFrame.new(targetHrp.Position + offset)
                myHrp.Velocity = Vector3.zero
                
                if carrying.Value ~= selectedPlayer then
                    local args = {target}
                    cuffs.RemoteFunction:InvokeServer(unpack(args))
                else
                    print("‚úÖ ‡∏à‡∏±‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", selectedPlayer)
                    captureToggle = false
                    CaptureToggleBtn.Text = "‚≠ï ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢"
                    CaptureToggleBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 90)
                    if captureConnection then
                        captureConnection:Disconnect()
                    end
                end
            end
        end)
    else
        CaptureToggleBtn.Text = "‚≠ï ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢"
        CaptureToggleBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 90)
        if captureConnection then
            captureConnection:Disconnect()
            captureConnection = nil
        end
    end
end)

-- Section 3: ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
CreateLabel("Label3", ContentFrame, "‚ö° ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏™‡∏£‡∏¥‡∏°", UDim2.new(1, -16, 0, 22), UDim2.new(0, 8, 0, yPos), 13)
yPos = yPos + 26

CreateButton("PoliceBtn", ContentFrame, "üëÆ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ï‡∏≥‡∏£‡∏ß‡∏à", UDim2.new(1, -16, 0, 36), UDim2.new(0, 8, 0, yPos), function()
    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(770, 14, -22)
end)
yPos = yPos + 40

CreateButton("JailBtn", ContentFrame, "üè¢ ‡∏•‡∏≠‡∏¢‡πÑ‡∏õ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏∏‡∏Å", UDim2.new(1, -16, 0, 36), UDim2.new(0, 8, 0, yPos), function()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    local targetCFrame = CFrame.new(853, 14, -19)
    local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tween = TweenService:Create(hrp, tweenInfo, {CFrame = targetCFrame})
    tween:Play()
end)

-- Auto-refresh
task.spawn(function()
    while ScreenGui and ScreenGui.Parent do
        local wantedList = GetWantedPlayers()
        if selectedPlayer and not table.find(wantedList, selectedPlayer) then
            selectedPlayer = nil
            DropdownButton.Text = "‚ñº ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô"
            if captureToggle then
                captureToggle = false
                CaptureToggleBtn.Text = "‚≠ï ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≤‡∏¢"
                CaptureToggleBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 90)
                if captureConnection then
                    captureConnection:Disconnect()
                    captureConnection = nil
                end
            end
        end
        task.wait(2)
    end
end)



-- ===============================================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Toggle GUI (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà)
-- ===============================================
-- ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡∏±‡∏ö UI Library ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
local function ToggleGUI(value)
    MainFrame.Visible = value
    print("GUI Visibility:", value)
end


CaptureTab:Toggle({
    Title = "‡πÄ‡∏õ‡∏¥‡∏î GUI ‡∏à‡∏±‡∏ö‡∏Ñ‡∏ô‡∏£‡πâ‡∏≤‡∏¢",
    Desc = "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ‡∏ï‡∏≥‡∏£‡∏ß‡∏à",
    Value = false,
    Callback = function(v)
        ToggleGUI(v)
    end
})


-- ========= Remote Toggle Loader (with GUI cleanup) =========
local URL = "https://raw.githubusercontent.com/wjahaboahaba-spec/Jaill/refs/heads/main/001dasdwasdwa"

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")

local Loader = getgenv().NEXON_RemoteToggle or {}
getgenv().NEXON_RemoteToggle = Loader

Loader.running     = Loader.running or false
Loader.cleanup     = nil
Loader._stopKey    = Loader._stopKey or ("__JAILL_STOP_"..tostring(math.random(1,9e6)))
Loader._watchConns = {}
Loader._created    = Loader._created or setmetatable({}, {__mode="k"}) -- ‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏¥‡∏ô‡∏™‡πÅ‡∏ï‡∏ô‡∏ã‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏¥‡∏î (weak keys)

local function getHUI()
    local ok, ui = pcall(function() return (typeof(gethui)=="function" and gethui()) end)
    return (ok and ui) or nil
end

local function guiRoots()
    local roots = {}
    local hui = getHUI()
    if hui then table.insert(roots, hui) end
    table.insert(roots, CoreGui)
    local pg = LocalPlayer:FindFirstChild("PlayerGui") or LocalPlayer:WaitForChild("PlayerGui", 3)
    if pg then table.insert(roots, pg) end
    return roots
end

local function clearConns()
    for _,c in ipairs(Loader._watchConns) do
        pcall(function() c:Disconnect() end)
    end
    table.clear(Loader._watchConns)
end

local function startWatchers()
    clearConns()
    -- ‡∏ï‡πà‡∏≠ DescendantAdded ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á "‡∏´‡∏•‡∏±‡∏á" ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    for _,root in ipairs(guiRoots()) do
        local conn = root.DescendantAdded:Connect(function(inst)
            if Loader.running then
                Loader._created[inst] = true
            end
        end)
        table.insert(Loader._watchConns, conn)
    end
end

local function destroyCreated()
    local n = 0
    for inst,_ in pairs(Loader._created) do
        if typeof(inst)=="Instance" and inst.Parent then
            local ok = pcall(function() inst:Destroy() end)
            if ok then n += 1 end
        end
    end
    table.clear(Loader._created)
    return n
end

local function raiseStopFlags(v)
    -- ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏á‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô
    getgenv()[Loader._stopKey] = v
    getgenv().JAIlL_STOP = v
    getgenv().JAIL_STOP  = v
    getgenv().STOP       = v
end

function Loader:Enable()
    if self.running then return end
    self.running = true
    raiseStopFlags(false)

    startWatchers()              -- << ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö UI ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ô‡∏µ‡πâ
    task.delay(0, function()     -- ‡πÅ‡∏¢‡∏Å‡πÄ‡∏ò‡∏£‡∏î‡πÇ‡∏´‡∏•‡∏î ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå
        local ok, chunk = pcall(function()
            return loadstring(game:HttpGet(URL))
        end)
        if not ok or type(chunk) ~= "function" then
            warn("‚ùå Load error:", chunk)
            self.running = false
            clearConns()
            return
        end

        local ok2, ret = pcall(chunk)
        if not ok2 then
            warn("‚ùå Runtime error:", ret)
            self.running = false
            clearConns()
            return
        end
        if type(ret) == "function" then
            self.cleanup = ret   -- ‡∏ñ‡πâ‡∏≤‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÉ‡∏´‡πâ cleanup ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ï‡∏≠‡∏ô‡∏õ‡∏¥‡∏î
        end
      
    end)
end

function Loader:Disable()
    if not self.running then return end
    self.running = false
    raiseStopFlags(true)

    -- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å cleanup ‡∏Ç‡∏≠‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    if type(self.cleanup) == "function" then
        pcall(self.cleanup)
        self.cleanup = nil
    end

    -- ‡∏õ‡∏¥‡∏î watcher ‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏≥‡∏•‡∏≤‡∏¢ UI ‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö‡πÑ‡∏ß‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    clearConns()
    local removed = destroyCreated()

    print(("‚èπÔ∏è Remote disabled (removed %d UI instance%s)"):format(removed, removed==1 and "" or "s"))
end

-- ========= Bind ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö UI Toggle ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì =========
CaptureTab:Toggle({
    Title = "GUI ‡∏à‡∏±‡∏ö‡πÇ‡∏à‡∏£‡∏ó‡∏±‡πâ‡∏á‡πÄ‡∏ã‡∏¥‡∏ü",
    Desc  = "‡∏ï‡∏≥‡∏£‡∏ß‡∏à‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô  ",
    Value = false,
    Callback = function(v)
        print("Toggle:", v)
        if v then
            Loader:Enable()
        else
            Loader:Disable()
        end
    end
})






Window:Line()



-----------------------------------------------------
-- üß∫ ‡∏á‡∏≤‡∏ô‡∏Ç‡∏≤‡∏ß (Placeholder)
-----------------------------------------------------
local White = Window:Tab({ Title = '‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ü‡∏≤‡∏°‡πÄ‡∏á‡∏¥‡∏ô', Icon = 'tag' })
    White:Section({ Title = '‡∏õ‡∏•‡πà‡∏¢‡∏ü‡∏≤‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏±‡∏ß‡πÜ' })


do

local Players = game:GetService('Players')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local ProximityPromptService = game:GetService('ProximityPromptService')
local player = Players.LocalPlayer

-- ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‚Äì‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ü‡∏≤‡∏£‡πå‡∏°
local farmingEnabled = false

-- üåÄ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ó‡πÄ‡∏•‡∏û‡∏≠‡∏£‡πå‡∏ï
local function tpTo(pos)
    if player.Character and player.Character:FindFirstChild('HumanoidRootPart') then
        player.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
    end
end

-- ‚öôÔ∏è ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô bypass cooldown
local function bypasscooldown()
    ProximityPromptService.PromptButtonHoldBegan:Connect(function(prompt)
        prompt.HoldDuration = 0
    end)
end

-- üß∫ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡∏∑‡∏≠ Basket
local function equipBasket()
    local backpack = player:WaitForChild('Backpack')
    local char = player.Character or player.CharacterAdded:Wait()

    if not backpack:FindFirstChild('Basket') and not char:FindFirstChild('Basket') then
        local args = { 'Use', 'Basket' }
        ReplicatedStorage:WaitForChild('Events'):WaitForChild('InventoryEvent'):FireServer(unpack(args))
        task.wait(1)
    end

    local tool = backpack:FindFirstChild('Basket')
    if tool then
        char:WaitForChild('Humanoid'):EquipTool(tool)
    end
end

-- üîç ‡∏´‡∏≤ ProximityPrompt ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•
local function findPrompt(model)
    for _, obj in ipairs(model:GetDescendants()) do
        if obj:IsA('ProximityPrompt') then
            return obj
        end
    end
    return nil
end

-- üéí ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ Backpack ‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏´‡∏° (100/100)
local function isBackpackFull()
    local gui = player:FindFirstChild('PlayerGui')
    if not gui then return false end

    local menu = gui:FindFirstChild('Menu')
    if not menu then return false end

    local backpackFrame = menu:FindFirstChild('BackpackFrame')
    if not backpackFrame then return false end

    local top1 = backpackFrame:FindFirstChild('TOP1')
    if not top1 then return false end

    local allItem = top1:FindFirstChild('AllItem')
    if not allItem or not allItem:IsA('TextLabel') then return false end

    local text = allItem.Text
    local current, max = string.match(text, '(%d+)/(%d+)')
    if current and max then
        local num = tonumber(current)
        local limit = tonumber(max)
        if num and limit and num >= limit then
            return true
        end
    end
    return false
end

-- üçá ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏á‡∏∏‡πà‡∏ô
local function farmGrapes()
    local grapeFolder = workspace:WaitForChild('Plants'):WaitForChild('Grape')

    while farmingEnabled do
        if isBackpackFull() then
           
            break
        end

        for _, grape in ipairs(grapeFolder:GetChildren()) do
            if not farmingEnabled then return end
            if isBackpackFull() then
              
                return
            end

            if grape:IsA('Model') then
                local part = grape:FindFirstChildWhichIsA('BasePart')
                if part then
                    tpTo(part.Position + Vector3.new(0, 3, 0))
                    task.wait(0.2)

                    local prompt = findPrompt(grape)
                    if prompt then
                        pcall(function()
                            fireproximityprompt(prompt)
                        end)
                    end

                    task.wait(1)
                end
            end
        end
    end
end

-- üßÉ ‡∏Ñ‡∏£‡∏≤‡∏ü‡∏≠‡∏á‡∏∏‡πà‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡πâ‡∏≥‡∏≠‡∏á‡∏∏‡πà‡∏ô (‡∏ó‡∏µ‡∏•‡∏∞ 1 ‡πÅ‡∏ö‡∏ö‡∏£‡∏±‡∏ß ‡πÜ)
local function craftGrapes()
    local inv = player:WaitForChild('Inventory')
    local grape = inv:FindFirstChild('Grape')
    if not grape then return end

    tpTo(Vector3.new(-3440, 37, -153))
    task.wait(1)

    while grape and grape.Value > 0 and farmingEnabled do
        local args = { 'Craft_Farm', 'Grape', 1 } -- ‡∏Ñ‡∏£‡∏≤‡∏ü‡∏ó‡∏µ‡∏•‡∏∞ 1
        ReplicatedStorage:WaitForChild('Events'):WaitForChild('CraftEvent'):FireServer(unpack(args))
        task.wait(0.25) -- ‡∏Ñ‡∏£‡∏≤‡∏ü‡∏£‡∏±‡∏ß ‡πÜ ‡πÄ‡∏£‡πá‡∏ß‡∏û‡∏≠‡∏î‡∏µ
    end
end

-- üí∞ ‡∏Ç‡∏≤‡∏¢‡∏ô‡πâ‡∏≥‡∏≠‡∏á‡∏∏‡πà‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
local function sellJuice()
    local inv = player:WaitForChild('Inventory')
    local juice = inv:FindFirstChild('Grape Juice')
    if not juice then

        return
    end

    local amount = juice.Value
    if amount <= 0 then
       
        return
    end

    tpTo(Vector3.new(372, 7, 189))
    task.wait(1)

    local args = { 'Grape Juice', amount }
    ReplicatedStorage:WaitForChild('Events'):WaitForChild('SellEvent'):FireServer(unpack(args))
  
end

-- üöÄ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ü‡∏≤‡∏£‡πå‡∏° (‡∏£‡∏±‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á)
local function startFarming()
    task.spawn(function()
        while farmingEnabled do
            tpTo(Vector3.new(-3554, 36, -183))
            task.wait(1)

            equipBasket()
            bypasscooldown()

            farmGrapes()
            if not farmingEnabled then break end

            craftGrapes()
            if not farmingEnabled then break end

            sellJuice()
            if not farmingEnabled then break end

            task.wait(2)
        end
    end)
end

-- üß† ‡∏õ‡∏∏‡πà‡∏° Toggle ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ü‡∏≤‡∏£‡πå‡∏°
White:Toggle({
    Title = "üçá ‡∏ü‡∏≤‡∏°‡∏≠‡∏á‡∏∏‡πà‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô",
    Desc = "",
    Value = false,
    Callback = function(v)
        farmingEnabled = v
        if v then
            print("‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏≠‡∏á‡∏∏‡πà‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
            startFarming()
        else
            print("üõë ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏≠‡∏á‡∏∏‡πà‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
        end
    end
})



local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local runFarm = false -- toggle ‡∏Ñ‡∏∏‡∏° loop

-- üåÄ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ß‡∏≤‡∏£‡πå‡∏õ
local function tpTo(pos)
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(pos)
end

-- üî™ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° Butcher knife
local function prepareKnife()
    local backpack = player:WaitForChild("Backpack")
    local char = player.Character or player.CharacterAdded:Wait()
    local knife = backpack:FindFirstChild("Butcher knife") or char:FindFirstChild("Butcher knife")

    if knife then
        char:WaitForChild("Humanoid"):EquipTool(knife)
        return
    end

    -- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‚Üí ‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà
    tpTo(Vector3.new(-1405, 17, -164))
    task.wait(1)
    local args = { "Use", "Butcher knife" }
    ReplicatedStorage:WaitForChild("Events"):WaitForChild("InventoryEvent"):FireServer(unpack(args))
    task.wait(1)

    knife = backpack:WaitForChild("Butcher knife", 5)
    if knife then
        char:WaitForChild("Humanoid"):EquipTool(knife)
    end
end

-- üéí ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ Backpack ‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
local function isBackpackFull()
    local gui = player:WaitForChild("PlayerGui")
    local menu = gui:FindFirstChild("Menu")
    if not menu then return false end
    local backpackFrame = menu:FindFirstChild("BackpackFrame")
    if not backpackFrame then return false end
    local top1 = backpackFrame:FindFirstChild("TOP1")
    if not top1 then return false end
    local allItem = top1:FindFirstChild("AllItem")
    if not allItem then return false end
    local text = allItem.Text or ""
    local current, max = string.match(text, "(%d+)/(%d+)")
    return tonumber(current) and tonumber(max) and tonumber(current) >= tonumber(max)
end

-- üêÑ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏µ‡∏ß‡∏±‡∏ß‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß
local function attackAllCows()
    local cowFolder = Workspace:WaitForChild("Plants"):WaitForChild("Cow")
    local remote = cowFolder:WaitForChild("Script"):WaitForChild("RemoteEvent")

    for _, cow in ipairs(cowFolder:GetChildren()) do
        if not runFarm then return end
        if isBackpackFull() then return end

        local cube = cow:FindFirstChild("Cube")
        if cube then
            tpTo(cube.Position + Vector3.new(0, 5, 0))
            task.wait(0.1)

            -- ‡∏ï‡∏µ‡∏£‡∏±‡∏ß 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
            for i = 1, 3 do
                remote:FireServer(cube)
                task.wait(0.05)
            end

            print("‚ö° ‡∏ï‡∏µ‡∏ß‡∏±‡∏ß:", cow.Name)
            task.wait(0.5) -- ‡∏£‡∏≠ 0.5 ‡∏ß‡∏¥ ‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏ï‡∏±‡∏ß‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        end
    end
end

-- üîß ‡∏Ñ‡∏£‡∏≤‡∏ü Meat (‡∏à‡∏ô‡∏´‡∏°‡∏î)
local function craftMeat()
    tpTo(Vector3.new(-1442, 17, -89))
    task.wait(1)

    local inv = player:WaitForChild("Inventory")
    local meat = inv:FindFirstChild("Meat")

    while meat and meat.Value > 0 and runFarm do
        local args = { "Craft_Farm", "Meat", 1 }
        ReplicatedStorage:WaitForChild("Events"):WaitForChild("CraftEvent"):FireServer(unpack(args))
        task.wait(0.01)
    end
end

-- üí∞ ‡∏Ç‡∏≤‡∏¢ Steak ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
local function sellSteak()
    tpTo(Vector3.new(373, 7, 187))
    task.wait(1)

    local inv = player:WaitForChild("Inventory")
    local steak = inv:FindFirstChild("Steak")

    if steak and steak.Value > 0 then
        local args = { "Steak", steak.Value }
        ReplicatedStorage:WaitForChild("Events"):WaitForChild("SellEvent"):FireServer(unpack(args))
       
    else
       
    end
end

-- üöÄ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å (‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏Ñ‡∏£‡∏ö‡∏ß‡∏á‡∏à‡∏£)
local function startFarmLoop()
    task.spawn(function()
        while runFarm do
            prepareKnife()
            task.wait(1)

            attackAllCows()
            if not runFarm then break end

            if isBackpackFull() then
                craftMeat()
                if not runFarm then break end
                task.wait(1.5)
                sellSteak()
            end

            task.wait(1)
        end
    end)
end

-- üß† ‡∏õ‡∏∏‡πà‡∏° Toggle ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏•‡∏π‡∏õ
White:Toggle({
    Title = "üêÑ ‡∏ü‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô",
    Desc = "",
    Value = false,
    Callback = function(v)
        runFarm = v
        if v then
            print("‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ß‡∏±‡∏ß‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
            startFarmLoop()
        else
            print("üõë ‡∏´‡∏¢‡∏∏‡∏î‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ß‡∏±‡∏ß‡πÅ‡∏•‡πâ‡∏ß")
        end
    end
})







end

Window:Line()



local FoodsAll = Window:Tab({Title = "‡∏ü‡∏≤‡∏°‡∏´‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", Icon = "tag"}) do
    FoodsAll:Section({Title = "‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ü‡∏≤‡∏° ‡∏™‡∏ï‡∏≠‡∏£‡πÄ‡∏ö‡∏≠‡∏£‡∏£‡∏µ‡πà"})



local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer

local fruitData = {
    Strawberry = {
        Folder = workspace.Plants:WaitForChild("Strawberry"),
        FarmPos = Vector3.new(-4462, 36, 563),
        CraftPos = Vector3.new(-4529, 36, 614),
        ModelPath = "Model",
        Category = "üçì ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà"
    },
    Banana = {
        Folder = workspace.Plants:WaitForChild("Banana"),
        FarmPos = Vector3.new(-4564, 24, -2843),
        CraftPos = Vector3.new(-4583, 17, -2676),
        ModelPath = "Model",
        Category = "üçå ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏Å‡∏•‡πâ‡∏ß‡∏¢"
    },

   Corn = {
        Folder = workspace.Plants:WaitForChild("Corn"),
        FarmPos = Vector3.new(-4875, 36, -3704),
        CraftPos = Vector3.new(-4848, 37, -3787),
        ModelPath = "Model",
        Category = "üåΩ ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏Ç‡πâ‡∏≤‡∏ß‡πÇ‡∏û‡∏î"
    },


    Apple = {
        Folder = workspace.Plants:WaitForChild("Apple"),
        FarmPos = Vector3.new(-2126, 16, -3279),
        CraftPos = Vector3.new(-2048, 17, -3191),
        ModelPath = "Model.Trunk",
        Category = "üçé ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ"
    },
    Orange = {
        Folder = workspace.Plants:WaitForChild("Orange"),
        FarmPos = Vector3.new(-3620, 15, -3893),
        CraftPos = Vector3.new(-3612, 17, -3875),
        ModelPath = "Model",
        Category = "üçä ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏™‡πâ‡∏°"
    },
    Durian = {
        Folder = workspace.Plants:WaitForChild("Durian"),
        FarmPos = Vector3.new(-1823, 16, -1911),
        CraftPos = Vector3.new(-1869, 17, -1876),
        ModelPath = "Model",
        Category = "ü•≠ ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏ó‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ô"
    },
    Grape = {
        Folder = workspace.Plants:WaitForChild("Grape"),
        FarmPos = Vector3.new(-3555, 37, -167),
        CraftPos = Vector3.new(-3441, 37, -152),
        ModelPath = "Model",
        Category = "üçá ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà"
    },
    Mango = {
        Folder = workspace.Plants:WaitForChild("Mango"),
        FarmPos = Vector3.new(-1675, 39, -38),
        CraftPos = Vector3.new(-1865, 37, -126),
        ModelPath = "Model.Model",
        Category = "ü•≠ ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á"
    },
Rice = {
    Folder = workspace.Plants:WaitForChild("Rice"),
    FarmPos = Vector3.new(-1434, 16, 929),
    CraftPos = Vector3.new(-1411, 17, 1081),
    ModelPath = "Model",
    Category = "üåæ ‡∏û‡∏∑‡∏ä‡∏ú‡∏•‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£",
    ToolName = "Sickle", -- ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≤‡∏£‡πå‡∏°
    CraftItemName = "Wheat" -- ‚úÖ ‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏£‡∏≤‡∏ü
},

}

local farmFlags, craftFlags = {}, {}

for name in pairs(fruitData) do
    farmFlags[name] = { enabled = false, running = false }
    craftFlags[name] = { enabled = false, running = false }
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
local function safeTeleport(cframe)
    local Character = LocalPlayer.Character
    if not Character then 
        Character = LocalPlayer.CharacterAdded:Wait()
        task.wait(1)
    end
    
    local HRP = Character:FindFirstChild("HumanoidRootPart")
    if not HRP then return false end
    
    HRP.CFrame = cframe
    task.wait(0.5)
    return true
end

local function isInventoryFullByText()
    local gui = LocalPlayer:FindFirstChild("PlayerGui")
    if not gui then return false end
    
    local menu = gui:FindFirstChild("Menu")
    if not menu then return false end
    
    local backpackFrame = menu:FindFirstChild("BackpackFrame")
    if not backpackFrame then return false end
    
    local top1 = backpackFrame:FindFirstChild("TOP1")
    if not top1 then return false end
    
    local allItem = top1:FindFirstChild("AllItem")
    if not allItem then return false end
    
    local text = allItem.Text or ""
    local current, max = text:match("^(%d+)/(%d+)$")
    return tonumber(current) and tonumber(max) and tonumber(current) >= tonumber(max)
end
local function equipOrRequestTool(toolName)
    local Character = LocalPlayer.Character
    if not Character then
        Character = LocalPlayer.CharacterAdded:Wait()
    end

    local Backpack = LocalPlayer:WaitForChild("Backpack")
    local tool = Backpack:FindFirstChild(toolName) or Character:FindFirstChild(toolName)

    if tool then
        if Backpack:FindFirstChild(toolName) then
            tool.Parent = Character
        end
    else
        local inventoryEvent = ReplicatedStorage:WaitForChild("Events"):WaitForChild("InventoryEvent")
        inventoryEvent:FireServer("Use", toolName)
        task.wait(1)
    end
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ProximityPrompt ‡πÅ‡∏•‡∏∞ Part ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
local function findFruitPrompt(model, modelPath)
    -- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ProximityPrompt ‡∏Å‡πà‡∏≠‡∏ô
    local prompt = model:FindFirstChildWhichIsA("ProximityPrompt", true)
    if not prompt then
        return nil, nil
    end
    
    -- ‡∏´‡∏≤ Part ‡∏ó‡∏µ‡πà‡∏°‡∏µ Position (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô BasePart)
    local targetPart = nil
    
    -- ‡∏•‡∏≠‡∏á‡∏´‡∏≤ Part ‡∏à‡∏≤‡∏Å parent ‡∏Ç‡∏≠‡∏á prompt ‡∏Å‡πà‡∏≠‡∏ô
    local parent = prompt.Parent
    if parent and parent:IsA("BasePart") then
        targetPart = parent
    else
        -- ‡∏ñ‡πâ‡∏≤ parent ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà BasePart ‡πÉ‡∏´‡πâ‡∏´‡∏≤ BasePart ‡πÉ‡∏ô model
        for _, descendant in pairs(model:GetDescendants()) do
            if descendant:IsA("BasePart") and descendant.Name ~= "HumanoidRootPart" then
                targetPart = descendant
                break
            end
        end
    end
    
    return prompt, targetPart
end

local function collectFruit(name, data)
    local flags = farmFlags[name]
    if flags.running then return end
    flags.running = true

    local Character = LocalPlayer.Character
    if not Character then
        Character = LocalPlayer.CharacterAdded:Wait()
        task.wait(1)
    end
    
    local HRP = Character:WaitForChild("HumanoidRootPart")
    
  
    
    -- ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ü‡∏≤‡∏£‡πå‡∏°
    local farmCFrame = CFrame.new(data.FarmPos)
    if safeTeleport(farmCFrame) then
       
    else
      
        flags.running = false
        return
    end
    
    task.wait(2)

equipOrRequestTool(data.ToolName or "Basket")

    task.wait(1)

    while flags.enabled do
        if isInventoryFullByText() then
            warn("Inventory ‡πÄ‡∏ï‡πá‡∏° ‚Äî ‡∏´‡∏¢‡∏∏‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß: " .. name)
            while isInventoryFullByText() and flags.enabled do 
                task.wait(5) 
            end
            if not flags.enabled then break end
        end

        local foundFruit = false
        for _, model in pairs(data.Folder:GetChildren()) do
            if not flags.enabled then break end
            if isInventoryFullByText() then break end

            local prompt, part = findFruitPrompt(model, data.ModelPath)
            
            -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ part ‡πÄ‡∏õ‡πá‡∏ô BasePart ‡∏à‡∏£‡∏¥‡∏á‡πÜ
            if prompt and part and part:IsA("BasePart") then
                foundFruit = true
                
                print("‡∏û‡∏ö‡∏ú‡∏•‡πÑ‡∏°‡πâ " .. name)
                
                -- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ProximityPrompt
                prompt.HoldDuration = 0
                prompt.RequiresLineOfSight = false
                prompt.MaxActivationDistance = 100
                
                -- ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏•‡πÑ‡∏°‡πâ (‡πÉ‡∏ä‡πâ Position ‡∏à‡∏≤‡∏Å BasePart)
                local fruitCFrame = CFrame.new(part.Position + Vector3.new(0, 3, 0))
                
                if safeTeleport(fruitCFrame) then
                    task.wait(0.5)
                    
                    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Å‡πá‡∏ö
                    if prompt and prompt:IsA("ProximityPrompt") then
                        -- ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏Å‡πá‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á
                        for i = 1, 3 do
                            fireproximityprompt(prompt)
                            task.wait(0.1)
                        end
                
                    end
                end
                task.wait(0.3)
            end
        end

        -- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏•‡πÑ‡∏°‡πâ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏´‡∏°‡πà
        if not foundFruit then
          
            task.wait(3)
        else
            task.wait(1)
        end
    end


    flags.running = false
end

local function autoCraftFruit(name, data)
    local flags = craftFlags[name]
    if flags.running then return end
    flags.running = true

    local Character = LocalPlayer.Character
    if not Character then
        Character = LocalPlayer.CharacterAdded:Wait()
    end
    
    local HRP = Character:WaitForChild("HumanoidRootPart")
    
    -- ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ñ‡∏£‡∏≤‡∏ü (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    if data.CraftPos and data.CraftPos.Magnitude > 0 then
        safeTeleport(CFrame.new(data.CraftPos))
        task.wait(1)
    end

    while flags.enabled do
        local craftEvent = ReplicatedStorage:WaitForChild("Events"):WaitForChild("CraftEvent")
       local itemName = data.CraftItemName or name
craftEvent:FireServer("Craft_Farm", itemName, 1)

        task.wait(0.2)
    end

    flags.running = false
end

-- üß≠ ‡πÅ‡∏ö‡πà‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ú‡∏•‡πÑ‡∏°‡πâ
local categoryOrder = {
    "üçä ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏™‡πâ‡∏°",
    "üçì ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà", 
    "üçå ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ",
    "üåΩ ‡∏Ç‡πâ‡∏≤‡∏ß‡πÇ‡∏û‡∏î",
    "ü•≠ ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á",
    "üå∞ ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏ó‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ô",
    "üåæ ‡∏û‡∏∑‡∏ä‡∏ú‡∏•‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£"
}


local fruitsByCategory = {}
for name, data in pairs(fruitData) do
    if not fruitsByCategory[data.Category] then
        fruitsByCategory[data.Category] = {}
    end
    table.insert(fruitsByCategory[data.Category], {name = name, data = data})
end

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
for _, category in ipairs(categoryOrder) do
    if fruitsByCategory[category] then
        FoodsAll:Section({Title = category})
        
        for _, fruit in ipairs(fruitsByCategory[category]) do
            local name = fruit.name
            local data = fruit.data
            
            -- ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ú‡∏•‡πÑ‡∏°‡πâ
     local icons = {
    Strawberry = "üçì",
    Banana = "üçå", 
    Corn = "üåΩ", 
    Apple = "üçé",
    Orange = "üçä",
    Durian = "üü§",
    Grape = "üçá",
    Mango = "ü•≠",
    Rice = "üåæ"
}

            
            local icon = icons[name] or "üçé"
            
            FoodsAll:Toggle({
                Title = icon .. " ‡∏ü‡∏≤‡∏£‡πå‡∏° " .. name,
                Callback = function(v)
                    farmFlags[name].enabled = v
                    if v and not farmFlags[name].running then
                        task.spawn(function()
                            collectFruit(name, data)
                        end)
                    end
                end
            })

            if data.CraftPos and data.CraftPos.Magnitude > 0 then
                FoodsAll:Toggle({
                    Title = icon .. " ‡∏Ñ‡∏£‡∏≤‡∏ü " .. name,
                    Callback = function(v)
                        craftFlags[name].enabled = v
                        if v and not craftFlags[name].running then
                            task.spawn(function()
                                autoCraftFruit(name, data)
                            end)
                        end
                    end
                })
            end
        end
    end
end

-- ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô categoryOrder
for category, fruits in pairs(fruitsByCategory) do
    local found = false
    for _, orderedCategory in ipairs(categoryOrder) do
        if category == orderedCategory then
            found = true
            break
        end
    end
    
    if not found then
        FoodsAll:Section({Title = category})
        
        for _, fruit in ipairs(fruits) do
            local name = fruit.name
            local data = fruit.data
            
            local icons = {
                Strawberry = "üçì",
                Banana = "üçå",
                Corn = "üåΩ",
                Apple = "üçé", 
                Orange = "üçä",
                Durian = "üü§",
                Grape = "üçá",
                Mango = "ü•≠"
            }
            
            local icon = icons[name] or "üçé"
            
            FoodsAll:Toggle({
                Title = icon .. " ‡∏ü‡∏≤‡∏£‡πå‡∏° " .. name,
                Callback = function(v)
                    farmFlags[name].enabled = v
                    if v and not farmFlags[name].running then
                        task.spawn(function()
                            collectFruit(name, data)
                        end)
                    end
                end
            })

            if data.CraftPos and data.CraftPos.Magnitude > 0 then
                FoodsAll:Toggle({
                    Title = icon .. " ‡∏Ñ‡∏£‡∏≤‡∏ü " .. name,
                    Callback = function(v)
                        craftFlags[name].enabled = v
                        if v and not craftFlags[name].running then
                            task.spawn(function()
                                autoCraftFruit(name, data)
                            end)
                        end
                    end
                })
            end
        end
    end
end

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ProximityPromptService = game:GetService("ProximityPromptService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local CoreGui = game:GetService("CoreGui")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local root = Character:WaitForChild("HumanoidRootPart")

-- ‚úÖ GUI ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°
local moneyGui = Instance.new("ScreenGui")
moneyGui.Name = "MoneyGainGui"
moneyGui.ResetOnSpawn = false
moneyGui.Parent = CoreGui

local label = Instance.new("TextLabel")
label.Size = UDim2.new(0.3, 0, 0.07, 0)
label.Position = UDim2.new(0.35, 0, 0.05, 0)
label.BackgroundTransparency = 0.3
label.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
label.TextColor3 = Color3.fromRGB(0, 255, 0)
label.TextScaled = true
label.Font = Enum.Font.GothamBold
label.Text = "‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°: +0"
label.Visible = false
label.Parent = moneyGui

-- ‚úÖ ‡∏õ‡∏¥‡∏î HoldDuration ‡∏õ‡∏∏‡πà‡∏° E
ProximityPromptService.PromptButtonHoldBegan:Connect(function(prompt)
	prompt.HoldDuration = 0
end)

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏î E
local function pressE()
	VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
	task.wait(0.05)
	VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end

-- ‚úÖ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏°‡∏µ‡∏î Butcher
local function prepareKnife()
	local buyRemote = ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("BuyItemEvent")
	if buyRemote then
		buyRemote:FireServer("Butcher knife")

	end

	local basket = LocalPlayer:WaitForChild("Backpack"):FindFirstChild("Butcher knife")
	if basket and basket:IsA("Tool") then
		basket.Parent = Character
	end

	local invRemote = ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("InventoryEvent")
	if invRemote then
		invRemote:FireServer("Use", "Butcher knife")

	end
end

local stopRequested = false

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏£‡∏£‡∏π‡∏õ Meat ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÉ‡∏ô Inventory
local function checkAndProcessMeat()
	local inventory = LocalPlayer:FindFirstChild("Inventory")
	if inventory and inventory:FindFirstChild("Meat") and inventory.Meat.Value >= 1 then
	

		-- ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏à‡∏∏‡∏î‡πÅ‡∏õ‡∏£‡∏£‡∏π‡∏õ
		root.CFrame = CFrame.new(-1441, 17, -91)
		task.wait(0.5)

		local args = {
			"Craft_Farm",
			"Meat",
			1
		}
		local craft = ReplicatedStorage:WaitForChild("Events"):WaitForChild("CraftEvent")
		craft:FireServer(unpack(args))


		task.wait(1)

		-- ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏à‡∏∏‡∏î‡∏ü‡∏≤‡∏£‡πå‡∏°
		root.CFrame = CFrame.new(-1432, 17, -157)
	end
end

-- ‚úÖ ‡∏•‡∏π‡∏õ‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ß‡∏±‡∏ß
local function farmCowsOnce()
	local cowFolder = workspace:WaitForChild("Plants"):WaitForChild("Cow")
	local remote = cowFolder:WaitForChild("Script"):WaitForChild("RemoteEvent")

	for _, cow in ipairs(cowFolder:GetChildren()) do
		if stopRequested then
			
			return
		end

		-- üîÑ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Meat ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
		checkAndProcessMeat()

		if cow:IsA("Model") and cow:FindFirstChild("Cube") then
			local cube = cow.Cube
			root.CFrame = cube.CFrame + Vector3.new(0, 5, 0)
			task.wait(0.2)

			pressE()

			remote:FireServer(cube)
		

			task.wait(2)

			local craft = ReplicatedStorage.Events:FindFirstChild("CraftEvent")
			if craft then
				craft:FireServer("Craft_Farm", "Meat", 1)
				
			end

			local sell = ReplicatedStorage.Events:FindFirstChild("SellEvent")
			if sell then
				sell:FireServer("Steak", 1)
			
			end

			label.Text = "‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°: +1 Steak"
			label.Visible = true
			task.wait(0.3)
			label.Visible = false

			task.wait(0.5)
		end
	end
end

-- ‚úÖ Toggle UI ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°
local running = false


   FoodsAll:Section({Title = "ü•© ‡∏ü‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠"})
FoodsAll:Toggle({
    Title = "‡∏ü‡∏≤‡∏° ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ß‡∏±‡∏ß",
    Desc = "",
    Value = false,
    Callback = function(state)
        running = state
        stopRequested = not state
   

        if running then
            root.CFrame = CFrame.new(-1432, 17, -157)
            prepareKnife()

            task.spawn(function()
                while running do
                    pcall(farmCowsOnce)
                    task.wait(1)
                end
            end)
        end
    end
})

    


end
    Window:Line()

local tpFoods = Window:Tab({Title = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ï‡πà‡∏≤‡∏á‡πÜ", Icon = "map"}) do 
    tpFoods:Section({Title = "üìç ‡∏à‡∏∏‡∏î‡∏ß‡∏≤‡∏£‡πå‡∏õ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ"})

    tpFoods:Button({
        Title = "‡∏à‡∏∏‡∏î‡πÄ‡∏Å‡∏¥‡∏î",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏à‡∏∏‡∏î‡πÄ‡∏Å‡∏¥‡∏î‡∏´‡∏•‡∏±‡∏Å",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(389, 7, 240)
        end
    })

    tpFoods:Button({
        Title = "‡∏ï‡∏•‡∏≤‡∏î‡πÇ‡∏•‡∏Å",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡πÇ‡∏ã‡∏ô‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ï‡∏•‡∏≤‡∏î‡πÇ‡∏•‡∏Å",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(372, 7, 188)
        end
    })


    tpFoods:Button({
        Title = "‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1391, 7, -316)
        end
    })

      tpFoods:Button({
        Title = "AFK ‡πÇ‡∏ã‡∏ô",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ AFK ‡πÇ‡∏ã‡∏ô",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(946, 7, -89)
        end
    })

      tpFoods:Button({
        Title = "‡∏ß‡∏±‡∏î",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ ‡∏ß‡∏±‡∏î",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(42, 7, 270)
        end
    })

     tpFoods:Button({
        Title = "‡πÇ‡∏ã‡∏ô‡∏ï‡∏Å‡∏õ‡∏•‡∏≤",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ ‡πÇ‡∏ã‡∏ô‡∏ï‡∏Å‡∏õ‡∏•‡∏≤",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-151, 7, -502)
        end
    })


    tpFoods:Button({
        Title = "‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(767, 8, 174)
        end
    })

    tpFoods:Button({
        Title = "‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡∏õ‡∏∑‡∏ô",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡πÇ‡∏ã‡∏ô‡∏õ‡∏∑‡∏ô",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(495, 9, 1161)
        end
    })

    tpFoods:Button({
        Title = "‡∏£‡πâ‡∏≤‡∏ô‡∏£‡∏ñ",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡πÇ‡∏ä‡∏ß‡πå‡∏£‡∏π‡∏°‡∏£‡∏ñ",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(277, 11, 1211)
        end
    })
    tpFoods:Button({
        Title = "‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-303, 7, 2)
        end
    })

    tpFoods:Section({Title = "üëî ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û"})

    tpFoods:Button({
        Title = "‡∏Ç‡∏ô‡∏™‡πà‡∏á",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏à‡∏∏‡∏î‡∏Ç‡∏ô‡∏™‡πà‡∏á",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(20, 8, -208)
        end
    })

    tpFoods:Button({
        Title = "‡∏ï‡∏≥‡∏£‡∏ß‡∏à (Police)",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡πÇ‡∏£‡∏á‡∏û‡∏±‡∏Å",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(788, 8, -72)
        end
    })

    tpFoods:Button({
        Title = "‡∏ó‡∏´‡∏≤‡∏£",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏ê‡∏≤‡∏ô‡∏ó‡∏´‡∏≤‡∏£",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2885, 7, 2571)
        end
    })

    tpFoods:Button({
        Title = "‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•",
        Desc = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-187, 8, 1453)
        end
    })
end

Window:Line()


local tabTP = Window:Tab({Title = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö", Icon = "apple"}) do
    tabTP:Section({Title = "üçâ ‡∏ú‡∏•‡πÑ‡∏°‡πâ"})

    tabTP:Button({
        Title = "‡πÅ‡∏≠‡∏õ‡πÄ‡∏õ‡∏¥‡πâ‡∏•",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2126, 16, -3279)
        end
    })

    tabTP:Button({
        Title = "‡∏™‡∏±‡∏õ‡∏õ‡∏∞‡∏£‡∏î",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2349, 47, 872)
        end
    })

    tabTP:Button({
        Title = "‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1675, 39, -38)
        end
    })

    tabTP:Button({
        Title = "‡∏™‡∏ï‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4462, 36, 563)
        end
    })

    tabTP:Button({
        Title = "‡∏™‡πâ‡∏°",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3620, 15, -3893)
        end
    })

    tabTP:Button({
        Title = "‡∏ó‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ô",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1823, 16, -1911)
        end
    })

    tabTP:Button({
        Title = "‡∏Å‡∏•‡πâ‡∏ß‡∏¢",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4564, 24, -2843)
        end
    })

    tabTP:Button({
        Title = "‡∏≠‡∏á‡∏∏‡πà‡∏ô",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3555, 37, -167)
        end
    })

    tabTP:Section({Title = "üåæ ‡∏û‡∏∑‡∏ä / ‡∏ò‡∏±‡∏ç‡∏û‡∏∑‡∏ä"})

    tabTP:Button({
        Title = "‡∏Ç‡πâ‡∏≤‡∏ß",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1538, 15, 1012)
        end
    })

    tabTP:Button({
        Title = "‡∏Ç‡πâ‡∏≤‡∏ß‡πÇ‡∏û‡∏î",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4904, 45, -3723)
        end
    })

    tabTP:Section({Title = "üçó ‡∏™‡∏±‡∏ï‡∏ß‡πå / ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠"})

    tabTP:Button({
        Title = "‡πÄ‡∏ô‡∏∑‡πâ‡∏≠",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1394, 15, -161)
        end
    })

    tabTP:Button({
        Title = "‡πÑ‡∏Å‡πà",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3115, 20, -1576)
        end
    })

    tabTP:Section({Title = "ü™µ ‡∏ß‡∏±‡∏™‡∏î‡∏∏"})

    tabTP:Button({
        Title = "‡πÑ‡∏°‡πâ",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1422, 32, -382)
        end
    })

        tabTP:Button({
        Title = "‡∏ñ‡πà‡∏≤‡∏ô‡∏´‡∏¥‡∏ô",
        Desc = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1864, 7, 3275)
        end
    })

end


Window:Line()


local Player = Window:Tab({Title = "Player", Icon = "user"}) do
    Player:Section({Title = "Player Modifications"})

    -- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    local SpeedEnabled = false
    local JumpEnabled = false
    local NoclipEnabled = false
    local InfiniteJumpEnabled = false
    local FlyEnabled = false
    local CurrentSpeed = 25
    local CurrentJumpPower = 50
local Hunger = LocalPlayer:WaitForChild("Hunger")

local InventoryEvent = ReplicatedStorage:WaitForChild("Events"):WaitForChild("InventoryEvent")
    local uis = game:GetService("UserInputService")
    local rs = game:GetService("RunService")
    local player = game:GetService("Players").LocalPlayer

    -- ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Event ‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô
    local jumpConnection
    local flyConnection

    -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
    local function applySpeed()
        if SpeedEnabled then
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = CurrentSpeed
            end
        end
    end

    local function applyJumpPower()
        if JumpEnabled then
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.JumpPower = CurrentJumpPower
            end
        end
    end

    -- Noclip
    local function noclipLoop()
        while NoclipEnabled do
            rs.Stepped:Wait()
            if player.Character then
                for _, part in pairs(player.Character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end
    end
-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö loop
local speedLoop

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô LoopSpeed
local function startLoopSpeed()
    if speedLoop then speedLoop:Disconnect() end
    speedLoop = rs.RenderStepped:Connect(function()
        if SpeedEnabled then
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid.WalkSpeed ~= CurrentSpeed then
                humanoid.WalkSpeed = CurrentSpeed
            end
        end
    end)
end

local function stopLoopSpeed()
    if speedLoop then
        speedLoop:Disconnect()
        speedLoop = nil
    end
    -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥
    local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then humanoid.WalkSpeed = 16 end
end

    -- Reset when character respawns
    local function setupCharacterReset()
        player.CharacterAdded:Connect(function()
            task.wait(1)
            if SpeedEnabled then applySpeed() end
            if JumpEnabled then applyJumpPower() end
            if NoclipEnabled then coroutine.wrap(noclipLoop)() end
            if FlyEnabled then startFly() end
        end)
    end
    setupCharacterReset()

    -- UI
-- ‡∏õ‡∏£‡∏±‡∏ö Toggle ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô LoopSpeed
Player:Toggle({
    Title = "‡∏ß‡∏¥‡πà‡∏á‡πÑ‡∏ß",
    Value = false,
    Callback = function(v)
        SpeedEnabled = v
        if v then
            startLoopSpeed()
        else
            stopLoopSpeed()
        end
    end
})

-- Slider ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß
Player:Slider({
    Title = "‡∏õ‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡πà‡∏á",
    Min = 16,
    Max = 250,
    Value = 25,
    Callback = function(val)
        CurrentSpeed = val
    end
})
    Player:Toggle({
        Title = "‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏∞‡∏•‡∏∏",
        Value = false,
        Callback = function(v)
            NoclipEnabled = v
            if v then coroutine.wrap(noclipLoop)() end
        end
    })

    Player:Toggle({
        Title = "‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î",
        Value = false,
        Callback = function(v)
            InfiniteJumpEnabled = v
            if v then infiniteJump()
            elseif jumpConnection then jumpConnection:Disconnect() end
        end
    })



-- ‚öôÔ∏è ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
local SelectedFood = "Hamburger"
local SelectedDrink = "Cola"
local autoEating = false

-- üçî Dropdown ‡∏≠‡∏≤‡∏´‡∏≤‡∏£
Player:Dropdown({
    Title = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
    List = {"Hamburger", "Hot dog", "Donut", "Icecream"},
    Value = SelectedFood,
    Callback = function(value)
        SelectedFood = value
     
    end
})

-- ü•§ Dropdown ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°
Player:Dropdown({
    Title = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°",
    List = {"Cola", "Water", "coffee", "Smoothie"},
    Value = SelectedDrink,
    Callback = function(value)
        SelectedDrink = value

    end
})

-- üîò Toggle ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏Å‡∏¥‡∏ô
Player:Toggle({
    Title = "‡∏Å‡∏î‡πÄ‡∏õ‡∏¥‡∏î ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏Å‡∏¥‡∏ô",
    Desc = "‡∏à‡∏∞‡∏Å‡∏¥‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ Hunger < 50",
    Value = autoEating,
    Callback = function(isEnabled)
        autoEating = isEnabled
      

        if isEnabled then
            task.spawn(function()
                while autoEating do
                    if Hunger.Value < 50 then
                        -- ‚úÖ ‡∏Å‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£
                        InventoryEvent:FireServer("Use", SelectedFood)
                     
                        task.wait(4)

                        -- ‚úÖ ‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥
                        InventoryEvent:FireServer("Use", SelectedDrink)
                        
                        task.wait(4)
                    else
                 
                        repeat
                            task.wait(1)
                        until Hunger.Value < 50 or not autoEating
                    end
                end
            end)
        end
    end
})
-- =========================================================
-- üß≠ ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (Dropdown + ‡∏õ‡∏∏‡πà‡∏° + Auto-Refresh 1 ‡∏ß‡∏¥)
-- =========================================================
local PlayersService = game:GetService("Players")

local SelectedTargetName = nil
local playerDropdown   -- ‡∏à‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏¥‡∏ô‡∏™‡πÅ‡∏ï‡∏ô‡∏ã‡πå‡∏Ç‡∏≠‡∏á Dropdown ‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠ refresh
local lastHash = ""

-- ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤) + ‡πÄ‡∏£‡∏µ‡∏¢‡∏á A->Z
local function getPlayerList()
    local list = {}
    for _, plr in ipairs(PlayersService:GetPlayers()) do
        if plr ~= player then
            table.insert(list, plr.Name)
        end
    end
    table.sort(list)
    if #list == 0 then
        list = {"‚Äî ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‚Äî"}
    end
    return list
end

-- ‡πÅ‡∏Æ‡∏ä‡∏á‡πà‡∏≤‡∏¢ ‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡πà‡∏≠‡∏¢‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
local function listHash(t)
    return table.concat(t, "|")
end

-- ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä Dropdown ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ (‡∏°‡∏µ/‡πÑ‡∏°‡πà‡∏°‡∏µ :Refresh)
local function tryRefreshDropdown(newList)
    if not playerDropdown then return end
    local ok = false

    -- ‡πÑ‡∏•‡πà‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ó‡∏µ‡∏•‡∏∞‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢‡πÉ‡∏ô‡∏´‡∏•‡∏≤‡∏¢ UI libs
    local tryMethods = {
        function() return playerDropdown:Refresh(newList, true) end,
        function() return playerDropdown:Set(newList) end,
        function() return playerDropdown:SetOptions(newList) end,
        function() return playerDropdown:SetList(newList) end,
        function() return playerDropdown:Update(newList) end,
        function() return playerDropdown:UpdateList(newList) end,
    }

    for _, f in ipairs(tryMethods) do
        local s = pcall(f)
        if s then ok = true break end
    end

    -- ‡∏ñ‡πâ‡∏≤ lib ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä ‡∏Å‡πá‡∏Ç‡πâ‡∏≤‡∏° (‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏∞‡∏¢‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï logic ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô ‡πÅ‡∏ï‡πà UI ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô)
    if not ok then
        -- ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ recreate dropdown ‡∏ï‡∏≤‡∏°‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà (‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)
        -- print("‚ÑπÔ∏è Dropdown library ‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Refresh ‡πÅ‡∏ö‡∏ö‡πÑ‡∏î‡∏ô‡∏≤‡∏°‡∏¥‡∏Å")
    end
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ß‡∏≤‡∏£‡πå‡∏õ
local function teleportToPlayerByName(name)
    if not name or name == "" or name == "‚Äî ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‚Äî" then
      
        return
    end

    local target = PlayersService:FindFirstChild(name)
    if not target then
       
        return
    end

    local myChar = player.Character or player.CharacterAdded:Wait()
    local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")
    local tChar = target.Character
    local tHRP  = tChar and tChar:FindFirstChild("HumanoidRootPart")

    if not (myHRP and tHRP) then
       
        return
    end

    -- ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ ~3 ‡∏™‡∏ï‡∏±‡∏î ‡πÅ‡∏•‡∏∞‡∏¢‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏±‡∏ô‡∏ï‡∏¥‡∏î
    local targetCF = tHRP.CFrame
    local offset   = targetCF * CFrame.new(0, 1.5, 3) -- +Y ‡∏Å‡∏±‡∏ô‡∏ï‡∏¥‡∏î‡∏´‡∏±‡∏ß, +Z = ‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á
    myHRP.CFrame  = offset

    print(("‚úÖ ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏´‡∏≤ %s ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"):format(name))
end

-- ===== UI: Dropdown + Button =====
playerDropdown = Player:Dropdown({
    Title = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ß‡∏≤‡∏£‡πå‡∏õ‡∏´‡∏≤",
    List  = getPlayerList(),
    Value = SelectedTargetName or "‚Äî ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‚Äî",
    Callback = function(v)
        SelectedTargetName = (v == "‚Äî ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‚Äî") and nil or v
 
    end
})

-- ‚ö° ‡∏õ‡∏∏‡πà‡∏°‡∏ß‡∏≤‡∏£‡πå‡∏õ
Player:Button({
    Title = "‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å",
    Callback = function()
        teleportToPlayerByName(SelectedTargetName)
    end
})

-- üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
task.spawn(function()
    while true do
        local list = getPlayerList()
        local h = listHash(list)
        if h ~= lastHash then
            lastHash = h
            tryRefreshDropdown(list)
            -- ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡∏´‡∏•‡∏∏‡∏î‡∏≠‡∏≠‡∏Å ‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
            local stillExists = false
            for _, n in ipairs(list) do
                if n == SelectedTargetName then stillExists = true break end
            end
            if not stillExists then
                SelectedTargetName = (#list > 0 and list[1] ~= "‚Äî ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‚Äî") and list[1] or nil
            end
        end
        task.wait(1)
    end
end)

end



Window:Line()

local Aimbot = Window:Tab({Title = "‡∏•‡πá‡∏≠‡∏Ñ‡πÄ‡∏õ‡πâ‡∏≤", Icon = "user"}) do
    Aimbot:Section({Title = "‡πÇ‡∏´‡∏°‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡∏´‡∏±‡∏ß‡∏≠‡∏≠‡πÇ‡∏ï‡πâ"})

    local AimbotSettings = {
        Enabled = false,
        Range = 50
    }

    -- üîò Toggle ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î Aimbot
    Aimbot:Toggle({
        Title = "‡πÄ‡∏õ‡∏¥‡∏î ‡∏•‡πá‡∏≠‡∏Ñ‡∏´‡∏±‡∏ß ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏Å‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏õ‡∏∑‡∏ô",
        Desc = "",
        Value = false,
        Callback = function(v)
            AimbotSettings.Enabled = v
            if v then
                print("Aimbot Enabled - Range: " .. AimbotSettings.Range)
            else
                print("Aimbot Disabled")
            end
        end
    })

    ----------------------------------------------------------------
    -- üì¶ ‡∏õ‡∏∑‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
    ----------------------------------------------------------------
    local POSSIBLE_GUN_NAMES = {
        "AK", "AUG", "Barret", "Desert Eagle", "Glock", "M4", "MP5",
        "Police Glock", "Police MP5", "Scar", "Shotgun", "Sniper Rifle",
        "Spas Shotgun", "Taser", "Uzi"
    }

    local function nameMatchesAny(name, list)
        if not name or name == "" then return false end
        local lower = string.lower(name)
        for _, v in ipairs(list) do
            if string.find(lower, string.lower(v), 1, true) then
                return true
            end
        end
        return false
    end

    local function getEquippedWeapon(character)
        if not character then return nil end
        for _, child in ipairs(character:GetChildren()) do
            if nameMatchesAny(child.Name, POSSIBLE_GUN_NAMES) then
                local se = child:FindFirstChild("ShootEvent", true)
                if se then return child, se end
            end
        end
        for _, descendant in ipairs(character:GetDescendants()) do
            if descendant:IsA("RemoteEvent") and descendant.Name == "ShootEvent" then
                return descendant.Parent, descendant
            end
        end
        return nil, nil
    end

    ----------------------------------------------------------------
    -- üî´ ‡∏¢‡∏¥‡∏á‡πÉ‡∏™‡πà‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    ----------------------------------------------------------------
    local function shootAtTarget(targetPlayer)
        local Players = game:GetService("Players")
        local localPlayer = Players.LocalPlayer

        if not targetPlayer or not targetPlayer.Character then return false end

        -- ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏°‡∏µ‡∏´‡∏±‡∏ß
        local head = targetPlayer.Character:FindFirstChild("Head")
        if not head then return false end

        -- ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏õ‡∏¥‡∏î PVP ‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏°
        local nametag = head:FindFirstChild("NameTag")
        if nametag then
            local pvp = nametag:FindFirstChild("PVP ON")
            if pvp and (not pvp.Visible and not pvp.Enabled) then
                return false -- PVP ‡∏õ‡∏¥‡∏î
            end
        end

        -- ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏¢‡∏±‡∏á‡∏°‡∏µ‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏≠‡∏¢‡∏π‡πà
        local humanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
        if not humanoid or humanoid.Health <= 0 then
            return false
        end

        -- ‚úÖ ‡∏¢‡∏¥‡∏á
        local character = localPlayer.Character
        if not character then return false end

        local weapon, shootEvent = getEquippedWeapon(character)
        if not weapon then return false end

        if shootEvent and shootEvent:IsA("RemoteEvent") then
            shootEvent:FireServer(head.Position)

            return true
        end

        return false
    end

    ----------------------------------------------------------------
    -- üéØ ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    ----------------------------------------------------------------
local function getDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
end

local function findNearestTarget()
    local Players = game:GetService("Players")
    local localPlayer = Players.LocalPlayer
    local character = localPlayer.Character
    if not character then return nil end

    local root = character:FindFirstChild("HumanoidRootPart")
    if not root then return nil end

    local nearest = nil
    local minDist = AimbotSettings.Range

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            local enemyChar = player.Character

            -- ‡∏Ç‡πâ‡∏≤‡∏°‡∏´‡∏°‡∏≠‡πÄ‡∏•‡∏¢ (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ goto/continue)
            if not isMedic(enemyChar) then
                local enemyRoot     = enemyChar:FindFirstChild("HumanoidRootPart")
                local enemyHumanoid = enemyChar:FindFirstChildOfClass("Humanoid")
                local enemyHead     = enemyChar:FindFirstChild("Head")

                if enemyHumanoid and enemyHumanoid.Health > 0 and enemyRoot and enemyHead then
                    local dist = getDistance(root.Position, enemyRoot.Position)
                    if dist <= minDist then
                        -- ‡∏ï‡πâ‡∏≠‡∏á PVP ON
                        local nametag = enemyHead:FindFirstChild("NameTag")
                        local pvp = nametag and nametag:FindFirstChild("PVP ON")
                        if pvp and (pvp.Visible or pvp.Enabled) then
                            minDist = dist
                            nearest = player
                        end
                    end
                end
            end
        end
    end

    return nearest
end

    ----------------------------------------------------------------
    -- ‚ôªÔ∏è Aimbot Loop
    ----------------------------------------------------------------
    local function autoAim()
        local target = findNearestTarget()
        if target then
            shootAtTarget(target)
        end
    end

    local aimbotConnection
    local function startAimbot()
        local RunService = game:GetService("RunService")
        if aimbotConnection then
            aimbotConnection:Disconnect()
        end
        aimbotConnection = RunService.Heartbeat:Connect(function()
            if AimbotSettings.Enabled then
                autoAim()
            end
        end)
    end

    startAimbot()

    local Players = game:GetService("Players")
    local localPlayer = Players.LocalPlayer
    localPlayer.CharacterAdded:Connect(function()
     
        task.wait(2)
        startAimbot()
    end)

    local UserInputService = game:GetService("UserInputService")
    UserInputService.InputBegan:Connect(function(input, gp)
        if gp then return end
        if input.KeyCode == Enum.KeyCode.Backspace then
            AimbotSettings.Enabled = false
         
        end
    end)

   
end

-- üîÑ ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏≠‡πÇ‡∏ï‡πâ
Aimbot:Toggle({
    Title = "‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏≠‡πÇ‡∏ï‡πâ",
    Desc = "‡∏à‡∏∞‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏≠‡∏ô‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏´‡∏°‡∏î",
    Value = false,
    Callback = function(v)
        isFiring = v
        if v then
            startFiring()
        end
    end
})

-- üéöÔ∏è ‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡∏•‡πá‡∏≠‡∏Ñ‡∏´‡∏±‡∏ß
Aimbot:Slider({
    Title = "‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡∏•‡πá‡∏≠‡∏Ñ‡∏´‡∏±‡∏ß",
    Min = 10,
    Max = 200,
    Rounding = 0,
    Value = 50,
    Callback = function(val)
        AimbotSettings.Range = val
        print("Aimbot Range set to: " .. val)
    end
})


Window:Line()




    local settings = Window:Tab({Title = "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤", Icon = "settings"}) do
    Settings:Section({Title = ""})



    
end
    Window:Line()

-- üîî Final Notification
Window:Notify({
    Title = 'Nexon Hub',
    Desc = '‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå! Credit leak by Nexon Hub',
    Time = 4,
})
